{"version":3,"sources":["ItemView.tsx","CollectionView.tsx","DetailView.tsx","Products.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ItemView","props","onItemClicked","bind","className","Card","onClick","this","CardHeader","title","name","subheader","type","CardMedia","image","id","React","Component","CollectionView","handleItemClicked","console","log","items","map","item","Box","display","flexWrap","Transition","forwardRef","ref","Slide","direction","DetailView","handleClose","onChange","onSubmit","state","noSwitches","Dialog","fullScreen","open","TransitionComponent","AppBar","Toolbar","IconButton","edge","color","aria-label","Close","Paper","Grid","container","spacing","src","product","xs","justify","align-items","longDescription","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","specs","actuationForce","actuationPoint","bottomOut","bottomOutTravel","price","noValidate","autoComplete","TextField","label","value","Button","variant","event","setState","parseInt","target","e","preventDefault","microEventBus","broadcast","username","productId","amount","Collection","window","App","showDetailView","showDetails","collectionInstance","processUserLoginEvent","on","subscribe","ajax","getJSON","data","collection","length","CircularProgress","foundItem","_","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4a103d4.chunk.js","sourcesContent":["import { Card, CardHeader, CardMedia } from \"@material-ui/core\";\nimport React from \"react\";\nimport { IProduct } from \"./Products\";\nimport './ItemView.css';\n\nexport interface IItemView extends IProduct {\n    onItemClicked(id: number): void;\n}\n\nexport class ItemView\n    extends React.Component<IItemView> {\n    constructor(props: IItemView) {\n        super(props)\n        this.onItemClicked =\n            this.onItemClicked.bind(this);\n    }\n    render() {\n        return (\n            <div className=\"item-view-card\">\n                <Card onClick={this.onItemClicked}>\n                    <CardHeader title={this.props.name}\n                        subheader={this.props.type}\n                    />\n                    <CardMedia\n                        className=\"card-media-image\"\n                        image={this.props.image}\n                    />\n                </Card>\n            </div>\n        )\n    }\n    onItemClicked() {\n        this.props.onItemClicked(this.props.id)\n    }\n}\n","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport { ItemView } from \"./ItemView\";\nimport { Collection } from \"./Products\";\n\nexport class CollectionView\n    extends React.Component<Collection> {\n    constructor(props: Collection) {\n        super(props)\n        this.handleItemClicked =\n            this.handleItemClicked.bind(this);\n    }\n\n    handleItemClicked(id: number) {\n        console.log(`handleItemClick : ${id}`);\n        this.props.handleItemClicked(id);\n    }\n\n    render() {\n        let items = this.props.items.map((item) => {\n            return (\n                <ItemView key={item.id} {...item}\n                    onItemClicked={this.handleItemClicked} />\n            )\n        })\n        return (\n\n            <Box display=\"flex\" flexWrap=\"wrap\">\n                {items}\n            </Box>\n\n        )\n    }\n}\n","import { AppBar, Button, Dialog, Grid, IconButton, Paper, Slide, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Toolbar } from \"@material-ui/core\";\nimport { TransitionProps } from \"@material-ui/core/transitions/transition\";\nimport { Close } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { IProduct } from \"./Products\";\nimport \"./DetailView.css\";\nimport { microEventBus } from \"./App\";\n// import * as window from 'BroadcastService';\n// import { BroadcastService } from 'broadcast-service';\n// let broadcastService: BroadcastService = (window as any).broadcastService;\n\n\nexport interface IDetailsProps {\n    // id: number = 0;\n    open: boolean;\n    product: IProduct | null;\n    handleClose(): void;\n    username: string;\n}\n\nexport interface IDetailsState {\n    noSwitches: number;\n}\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport class DetailView extends React.Component<IDetailsProps, IDetailsState> {\n\n    constructor(props: IDetailsProps) {\n        super(props);\n        this.handleClose = this.handleClose.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            noSwitches: 70\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"full-screen-details-dialogue\">\n                <Dialog\n                    fullScreen\n                    open={this.props.open}\n                    TransitionComponent={Transition}>\n                    <AppBar>\n                        <Toolbar>\n                            <IconButton\n                                edge=\"start\"\n                                color=\"inherit\"\n                                onClick={this.handleClose}\n                                aria-label=\"close\">\n                                <Close></Close>\n                            </IconButton>\n                        </Toolbar>\n                    </AppBar>\n                    <div className=\"details-paper-padding-top\">\n                        <Paper className=\"details-paper-body\">\n                            <Grid container spacing={5}>\n                                <Grid item>\n                                    <img className=\"large-image\" src={this.props.product?.image} />\n                                </Grid>\n                                <Grid item xs container direction=\"column\" justify=\"flex-start\" align-items=\"stretch\" >\n                                    <Grid item >\n                                        <h1>{this.props.product?.name}</h1>\n                                    </Grid>\n                                    <Grid item >\n                                        <h2>{this.props.product?.type}</h2>\n                                    </Grid>\n                                    <Grid item >\n                                        <p>{this.props.product?.longDescription}</p>\n                                    </Grid>\n                                    <Grid item >\n                                        <TableContainer component={Paper}>\n                                            <Table aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Specifiations</TableCell>\n                                                        <TableCell align=\"right\">&nbsp;</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    <TableRow >\n                                                        <TableCell >Actuation Force</TableCell>\n                                                        <TableCell >{this.props.product?.specs?.actuationForce} g</TableCell>\n                                                    </TableRow>\n                                                    <TableRow >\n                                                        <TableCell >Actuation Point</TableCell>\n                                                        <TableCell >{this.props.product?.specs?.actuationPoint} mm</TableCell>\n                                                    </TableRow>\n                                                    <TableRow >\n                                                        <TableCell >Bottom Out</TableCell>\n                                                        <TableCell >{this.props.product?.specs?.bottomOut} g</TableCell>\n                                                    </TableRow>\n                                                    <TableRow >\n                                                        <TableCell >Bottom Out Travel</TableCell>\n                                                        <TableCell >{this.props.product?.specs?.bottomOutTravel} mm</TableCell>\n                                                    </TableRow>\n                                                    <TableRow >\n                                                        <TableCell >Price</TableCell>\n                                                        <TableCell >$ {this.props.product?.specs?.price}</TableCell>\n                                                    </TableRow>\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n                                    </Grid>\n                                    <Grid item >\n                                        &nbsp;\n                                    </Grid>\n                                    <Grid item >\n                                        <h3>Order Now :</h3>\n                                    </Grid>\n                                    <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\n\n                                        <Grid item >\n                                            <TextField type=\"number\" name=\"noSwitches\" id=\"standard-basic\" label=\"No of switches\" onChange={this.onChange} value={this.state.noSwitches} />\n                                        </Grid>\n                                        <Grid item >\n                                            &nbsp;\n                                        </Grid>\n\n                                        <Grid item >\n                                            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                                                Add to Cart\n                                        </Button>\n\n                                        </Grid>\n                                    </form>\n\n                                </Grid>\n\n                            </Grid>\n                        </Paper>\n                    </div>\n                </Dialog>\n            </div>\n        )\n    }\n    handleClose() {\n        console.log(`Details: handleClose()`)\n        this.props.handleClose();\n    }\n\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({ noSwitches: parseInt(event.target.value) });\n        console.log(`onChange : ${event.target.name} : ${event.target.value}`);\n    }\n\n    onSubmit(e: React.FormEvent) {\n        console.log(`submit ; ${this.state.noSwitches}`);\n        e.preventDefault();\n\n        if (this.props.product) {\n            microEventBus.broadcast('add-user-cart-item', {\n                username: this.props.username,\n                productId: this.props.product?.id,\n                amount: this.state.noSwitches\n            });\n        }\n    }\n}\n\n","\n\nexport interface IProduct {\n    id: number;\n    name: string;\n    type: string;\n    image: string;\n    longDescription: string;\n    specs?: ISpecs;\n}\nexport interface ISpecs {\n    actuationForce: string;\n    actuationPoint: string;\n    bottomOut: string;\n    bottomOutTravel: string;\n    price: string;\n}\n\nexport class Collection {\n    handleItemClicked(id: number) { }\n    items: IProduct[] = [];\n    //     these manually created items can be deleted\n    //     [\n    //         {\n    //         id: 1,\n    //         name: \"Holy Panda\",\n    //         type: \"Tactile\"\n    //         }\n    //     ]\n\n}","import React from 'react';\nimport './App.css';\nimport { CollectionView } from './CollectionView';\nimport { DetailView } from './DetailView';\nimport { Collection, IProduct } from './Products';\nimport { ajax } from 'rxjs/ajax';\n\nimport { CircularProgress } from \"@material-ui/core\";\nimport * as _ from \"underscore\";\nimport { MicroEventBus } from 'micro-event-bus';\nexport let microEventBus: MicroEventBus = (window as any).microEventBus;\n\nexport interface IAppProps { };\nexport interface IAppState {\n    showDetails: boolean;\n    product: IProduct | null;\n    collectionInstance: Collection;\n    username: string;\n}\n\n// this class instance will now be part of the App state\n// const collectionInstance = new Collection();\n\nclass App extends\n    React.Component<IAppProps, IAppState> {\n\n    constructor(props: IAppProps) {\n        super(props);\n        this.showDetailView =\n            this.showDetailView.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n\n        this.state = {\n            showDetails: false,\n            product: null,\n            collectionInstance: new Collection(),\n            username: \"\"\n        };\n\n\n    }\n\n    componentDidMount() {\n        this.processUserLoginEvent = this.processUserLoginEvent.bind(this);\n\n        // console.log(`window.broadcastService : ${(window as any).broadcastService}`)\n        // console.log(`messageBus : ${broadcastService}`)\n\n        microEventBus.on('user-logged-in').subscribe(\n            this.processUserLoginEvent\n        );\n\n        ajax.getJSON(\"http://127.0.0.1:3000/products\")\n            .subscribe((data) => {\n                let collection = new Collection();\n                collection.items = data as IProduct[];\n                this.setState({\n                    showDetails: false,\n                    product: null,\n                    collectionInstance: collection\n                });\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                { this.state.collectionInstance.items.length < 1 ?\n                    <div className=\"App-header\">\n                        <CircularProgress />\n                    </div>\n                    : \"\"}\n                <CollectionView\n                    // {...collectionInstance}\n                    // replaced with:\n                    {...this.state.collectionInstance}\n                    handleItemClicked={this.showDetailView} >\n                </CollectionView>\n                <DetailView open={this.state.showDetails}\n                    product={this.state.product}\n                    handleClose={this.handleClose}\n                    username={this.state.username}\n                ></DetailView>\n            </div>\n        )\n    }\n    showDetailView(id: number) {\n        console.log(`App.handleClick() called`);\n        let foundItem = _.find(\n            this.state.collectionInstance.items,\n            (item: IProduct) => {\n                return item.id === id\n            });\n\n        if (foundItem) {\n\n            this.setState({\n                showDetails: true,\n                product: foundItem,\n                username: this.state.username\n            });\n        }\n\n    }\n    handleClose() {\n        console.log(`App : handleClose()`);\n        this.setState({\n            showDetails: false,\n            product: null\n        })\n    }\n    processUserLoginEvent(event: string | undefined) {\n        console.log(`RCT : App.processUserLoginEvent : ${event}`);\n\n        if (event) {\n            this.setState({ username: event });\n        }\n    }\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}